#!/usr/bin/perl
use lib qw(/opt/w5base2/lib /opt/w5base/lib);
use strict;                   
use W5Base::API;
use Data::Dumper;

my $DefaultBase="https://w5base.net/w5base/auth/";
my ($help,$verbose,$loginuser,$loginpass,$quiet,$base,$lang);
my %P=("help"=>\$help,"base=s"=>\$base,"lang=s"=>\$lang,
       "webuser=s"=>\$loginuser,"webpass=s"=> \$loginpass,
       "verbose+"=>\$verbose);
my $optresult=XGetOptions(\%P,\&Help,undef,undef,".W5Base.Interface");

#######################################################################
# create connection config
#
my $apidebug=$verbose>=3 ? 1 : 0;
my $Config=createConfig($base,$loginuser,$loginpass,$lang,$apidebug);
if (!defined($Config)){
   msg(ERROR,"base url or username/password is not valid");exit(1);
}
else{
   msg(DEBUG,"create of config ok");
}
msg(DEBUG,"verbose=$verbose");


#######################################################################
# load ModuleObject
#
my $objectname="base::workflow";
my $wf=getModuleObject($Config,$objectname);
if (!defined($wf)){
   msg(ERROR,"can't load object $objectname");exit(2);
}
else{
   msg(DEBUG,"create of ModuleObject $wf ok");
}


my $id="12887964850001";

# Step 1: accept
if ($WfRec->{stateid}!=3 && 
    grep(/^wfaccept$/,@{$WfRec->{posibleactions}})){
   $wf->storeRecord({action=>'wfaccept'},$id);
   $wf->dieOnERROR();
}

# Step 2: add P800 Parameters
$wf->storeRecord({
      tcomworktime=>'245',
      tcomcodcomments=>'tcomcodcomments: testtext',
      tcomcodcause=>'appl.add.rollout'},$id);
$wf->dieOnERROR();

# Step 3: wffineproc
my $WfRec=reloadWf($wf,$id);
$wf->storeRecord({action=>'wffineproc',note=>'Ende'},$id);
$wf->dieOnERROR();

# Step 4: check end state
my $WfRec=reloadWf($wf,$id);
print Dumper($WfRec);


sub reloadWf
{
   my $wf=shift;
   my $id=shift;

   $wf->SetFilter({id=>[$id]});
   my @l=$wf->getHashList(qw(name posibleactions stateid step class wffields));
   if ($#l!=0){
      printf STDERR ("ERROR: while loading $id\n");
      exit(255);
   }
   return($l[0]);
}


